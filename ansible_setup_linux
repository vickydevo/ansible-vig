cmds
------------
## create a role with file structure
ansible-galaxy init <rolename>
ansible-galaxy collections
ping all servers
----------------
ansible devservers -m ping 
ansible devservers -m ping -i /home/ubuntu/path/hosts --private-key=~/.ssh/project.pem

check RAM for all srvers
------------------------
ansible devservers -a "free -h"
  -a: This option specifies that you're providing an ad-hoc command to run on the remote hosts.

ansible devservers -a "sudo apt update"

command to list your inventory 
------------------------------
ansible-inventory --list -y

ansible-inventory --list -y -i /home/ubuntu/filename/hosts

---
  - name: Dates Playbooks
    hosts: dev
    become: yes
    become_user: root
    gather_facts: false
    tasks:
      - name: Show date
        command: date

      - name: start uptime
        command: uptime
--------------------------------
install_nginx.yml   

---
- name: deploy nginx server
  hosts: dev
  become: yes
  tasks:
    - name: Install Nginx
      apt: 
        name: nginx
        state: latest
    - name: Start service nginx, if not started
      ansible.builtin.service:
        name: nginx
        state: started

---
  - name: Deploying nginx server
    hosts: all
    become: yes
    become_user: root
    gather_facts: true
    tasks: 
      - name: installing nginx server
        apt:
          name: nginx
          state: latest
      - name: copying html in /var/www/html/index.html
        copy:
          src: /home/ubuntu/index.html
          dest: /var/www/html

      - name: start nginx service
        service: 
          name: nginx
          state: started
        notify: restart nginx
    handlers:
      - name: restart nginx
        service:
          name: nginx
          state: restarted  
---
  - name: remove nginx server
    hosts: tag_env_dev
    become: yes
    become_user: root
    gather_facts: true
    tasks:
      - name: remove nginx server
        apt:
          name: nginx
          state: absent

          chat
---
- name: removing nginx server
  hosts: tag_env_dev
  become: yes
  become_user: root
  gather_facts: true
  tasks:
    - name: removing nginx server
      apt:
        name: nginx
        state: absent

-------------------------------------
---
  - name: installing packages for python env
    become: yes
    apt:
      name:
        - python3-pip
      update_cache: yes

  - name: Creates directory
    file:
      path: ./basic-http-server
      state: directory
  - name: install apache2
    become: yes
    apt: name=apache2 update_cache=yes state=latest
